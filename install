#!/usr/bin/env bash

#
# Configuration
#
LINK_FROM=$HOME
LINK_TO=$(pwd)
LINK_MODE=link

#
# Helper functions
#
extract_arg_value() {
  echo $1 | sed 's/^[-a-zA-Z0-9]*=//'
}

extract_arg_name() {
  echo $1 | sed -e 's/^\([-a-zA-Z0-9]*\)=.*/\1/'
}

#
# Extract arguments
#
for arg in "$@"
do
  case $arg in
    -f=*|--from=*)
      LINK_FROM=$(extract_arg_value $arg)
    ;;

    -m=*|--mode=*)
      LINK_MODE=$(extract_arg_value $arg)
    ;;

    *)
      echo "ERROR: Unable to handle argument: $(extract_arg_name $arg)"
      exit 1
  esac
done

#
# Validate arguments
#
if [ ! -d "$LINK_FROM" ]; then
  echo "ERROR: Invalid link from given. Must be a valid directory."
  exit 1
fi

if [ "$LINK_MODE" != "link" ] && [ "$LINK_MODE" != "copy" ]; then
  echo "ERROR: Invalid link mode given. Must either be 'link' or 'copy'."
  exit 1
fi

#
# Update git submodules
#
echo ">> Updating all git submodules"
git submodule update --init --recursive

#
# Link all dotfiles from the current directory
#
echo ">> Creating all symlinks"

for dir in $(ls -a1); do
    # Skip "." and ".."
    if [ "${dir}" == "." ] || [ "${dir}" == ".." ]; then
        continue
    fi

    # Skip some git files that are specific to this repository
    if [ "${dir}" == ".git" ] \
    || [ "${dir}" == ".gitmodules" ] \
    || [ "${dir}" == ".gitignore" ] \
    || [ "${dir}" == ".gitattributes" ]; then
        continue
    fi

    if [ "${dir}" == ".dpkg.cfg" ] && [ -f /etc/os-release ]; then
      OS_ID=`cat /etc/os-release | grep "ID=" | sed "s/ID=//"`
      if [ "${OS_ID}" != "ubuntu" ]; then
        continue;
      fi
    fi

    # Skip all "normal" (non hidden) files
    if [ "${dir:0:1}" != "." ]; then
        continue
    fi

    FILE_LINK_FROM="${LINK_FROM}/${dir}"
    FILE_LINK_TO="${LINK_TO}/${dir}"

    rm -rf "${FILE_LINK_FROM}"

    if [ "$LINK_MODE" == "copy" ]; then
      cp -R "${FILE_LINK_TO}" "${FILE_LINK_FROM}"
    else
      ln -s "${FILE_LINK_TO}" "${FILE_LINK_FROM}"
    fi
done

#
# Install vim plugins
#
echo ">> Installing all vim plugins"
vim -e -c BundleInstall -c quitall > /dev/null

#
# Done! :D
#
echo ">> Done"
